// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3) &ht LCTRL k1  &ht LALT k2 &ht LGUI  k3
#define HRMR(k1,k2,k3) &ht RGUI  k1  &ht RALT k2 &ht RCTRL k3

#define _BS 0
#define _NM 1
#define _SM 2
#define _FN 3
#define _NV 4
#define _CP 5

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        td_qec: tap_dance_qec {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_QEC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_atb: tap_dance_atb {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ATB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };

        td_oqt: tap_dance_oqt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_OQT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp SQT>;
        };

        td_set: tap_dance_set {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };

        td_scp: tap_dance_scp {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SCP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q ESC   │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  Y       │  ; :     │
            &td_qec    &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A TAB   │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │ O ' "    │
            &td_atb    HRML(R,        S,         T)     &kp G          &kp M      HRMR(N,        E,         I)     &td_oqt
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │  SPC ENT │  ENT     │   │  SFT CAP │  BSPC    │
                                             &td_set    &kp ENTER      &td_scp    &kp BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
